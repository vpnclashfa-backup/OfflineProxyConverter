name: Build and Release Subconverter Desktop

on:
  schedule:
    - cron: '0 0 */3 * *'
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Get latest subconverter release info
      id: get_subconverter_release
      run: |
        Write-Host "در حال دریافت آخرین نسخه Subconverter از مخزن رسمی..."
        $response = Invoke-RestMethod -Uri "https://api.github.com/repos/metacubex/subconverter/releases/latest" -Headers @{Authorization = "token ${{ secrets.GITHUB_TOKEN }}"}

        $latest_tag = $response.tag_name
        $asset_url = $response.assets | Where-Object { $_.name -like "subconverter_win64*.7z" } | Select-Object -ExpandProperty browser_download_url

        if (-not $asset_url) {
          Write-Host "فایل asset با الگوی subconverter_win64*.7z پیدا نشد. اجرای اکشن متوقف می‌شود بدون خطا."
          exit 0
        }

        Write-Host "آخرین تگ نسخه: $latest_tag"
        Write-Host "آدرس دانلود asset: $asset_url"

        echo "LATEST_SUB_TAG=$latest_tag" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        echo "SUB_ASSET_URL=$asset_url" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
      shell: powershell

    - name: Check if new release is needed
      id: check_release_needed
      run: |
        Write-Host "بررسی آخرین ریلیز ساخته شده در مخزن خودمان..."
        $headers = @{ Authorization = "token ${{ secrets.GITHUB_TOKEN }}" }
        $repo = "${{ github.repository }}"
        $releases_url = "https://api.github.com/repos/$repo/releases"
        $releases = Invoke-RestMethod -Uri $releases_url -Headers $headers
        
        if ($null -eq $releases -or $releases.Count -eq 0) {
          Write-Host "ریلیزی قبلی وجود ندارد، ساخت ریلیز ضروری است."
          echo "RELEASE_NEEDED=true" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          exit 0
        }

        $latest_release_tag = $releases[0].tag_name
        Write-Host "تگ آخرین ریلیز ساخته شده: $latest_release_tag"

        $current_tag = "${{ env.LATEST_SUB_TAG }}"
        if (-not $current_tag) {
          Write-Host "متغیر LATEST_SUB_TAG مقدار ندارد، ساخت ریلیز انجام نمی‌شود."
          echo "RELEASE_NEEDED=false" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          exit 0
        }

        if ($latest_release_tag -like "*$current_tag*") {
          Write-Host "نسخه جدید نسبت به آخرین ریلیز وجود ندارد."
          echo "RELEASE_NEEDED=false" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        } else {
          Write-Host "نسخه جدید شناسایی شد، ساخت ریلیز ادامه می‌یابد."
          echo "RELEASE_NEEDED=true" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        }
      shell: powershell

    - name: Check if code changed since last release
      id: check_code_change
      run: |
        Write-Host "بررسی تغییرات کد نسبت به آخرین ریلیز..."
        $headers = @{ Authorization = "token ${{ secrets.GITHUB_TOKEN }}" }
        $repo = "${{ github.repository }}"
        $releases_url = "https://api.github.com/repos/$repo/releases"
        $releases = Invoke-RestMethod -Uri $releases_url -Headers $headers

        if ($null -eq $releases -or $releases.Count -eq 0) {
          Write-Host "ریلیز قبلی وجود ندارد، فرض بر تغییر کد."
          echo "CODE_CHANGED=true" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          exit 0
        }

        $latest_release_tag = $releases[0].tag_name
        Write-Host "تگ آخرین ریلیز: $latest_release_tag"

        # گرفتن SHA تگ آخرین ریلیز
        $tag_url = "https://api.github.com/repos/$repo/git/ref/tags/$latest_release_tag"
        $tag_ref = Invoke-RestMethod -Uri $tag_url -Headers $headers

        if (-not $tag_ref.object.sha) {
          Write-Host "SHA مربوط به آخرین تگ ریلیز پیدا نشد، فرض بر تغییر کد."
          echo "CODE_CHANGED=true" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          exit 0
        }

        $last_release_sha = $tag_ref.object.sha
        Write-Host "SHA آخرین ریلیز: $last_release_sha"

        # بررسی تفاوت با HEAD فعلی
        $diff = git diff $last_release_sha HEAD --name-only

        if ($diff) {
          Write-Host "تغییرات کد شناسایی شد:"
          Write-Host $diff
          echo "CODE_CHANGED=true" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        } else {
          Write-Host "هیچ تغییر کدی نسبت به آخرین ریلیز وجود ندارد."
          echo "CODE_CHANGED=false" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        }
      shell: powershell

    - name: Stop if no new release and no code change
      if: env.RELEASE_NEEDED != 'true' && env.CODE_CHANGED != 'true'
      run: |
        Write-Host "هیچ نسخه جدیدی منتشر نشده و کد مخزن هم تغییر نکرده است. نیازی به ساخت ریلیز جدید نیست. اجرای اکشن با موفقیت پایان یافت."
      shell: powershell

    - name: Download and Extract subconverter.exe
      if: env.RELEASE_NEEDED == 'true' || env.CODE_CHANGED == 'true'
      run: |
        Write-Host "دانلود و استخراج فایل subconverter_win64..."
        if ("${{ env.SUB_ASSET_URL }}" -eq "") {
          Write-Error "آدرس دانلود asset خالی است."
          exit 1
        }
        Invoke-WebRequest -Uri "${{ env.SUB_ASSET_URL }}" -OutFile "subconverter_release.7z"
        & "C:\Program Files\7-Zip\7z.exe" x "subconverter_release.7z" -o*
        $subconverterExe = Get-ChildItem -Path . -Recurse -Filter "subconverter.exe" | Select-Object -First 1
        if ($subconverterExe) {
          if ($subconverterExe.DirectoryName -ne (Get-Location).Path) {
            Move-Item -Path $subconverterExe.FullName -Destination "subconverter.exe" -Force
          }
        } else {
          Write-Error "فایل subconverter.exe پس از استخراج پیدا نشد."
          exit 1
        }
        Remove-Item -Force "subconverter_release.7z"
        Get-ChildItem -Path . -Directory -Filter "subconverter-windows-amd64-*" | Remove-Item -Recurse -Force
      shell: powershell

    - name: Install dependencies
      if: env.RELEASE_NEEDED == 'true' || env.CODE_CHANGED == 'true'
      run: npm install

    - name: Build Electron application for Windows
      if: env.RELEASE_NEEDED == 'true' || env.CODE_CHANGED == 'true'
      run: npm run build

    - name: Create Release
      if: env.RELEASE_NEEDED == 'true' || env.CODE_CHANGED == 'true'
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: subconverter-desktop-${{ env.LATEST_SUB_TAG }}-${{ github.run_number }}
        release_name: Subconverter Desktop with ${{ env.LATEST_SUB_TAG }} (Build ${{ github.run_number }})
        body: |
          این یک بیلد خودکار از برنامه دسکتاپ Subconverter است که شامل موتور تبدیل Subconverter نسخه ${{ env.LATEST_SUB_TAG }} می‌باشد.
          این Release هر سه روز یک بار به‌روزرسانی می‌شود.
        draft: false
        prerelease: false

    - name: Upload Release Asset
      if: env.RELEASE_NEEDED == 'true' || env.CODE_CHANGED == 'true'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/Subconverter Desktop-1.0.0-win.zip
        asset_name: Subconverter_Desktop_Win-${{ env.LATEST_SUB_TAG }}.zip
        asset_content_type: application/zip
