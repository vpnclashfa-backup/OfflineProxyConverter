# .github/workflows/build.yml
name: Build and Release Subconverter Desktop

on:
  schedule:
    - cron: '0 0 */3 * *'       # هر 3 روز یکبار نیمه‌شب UTC
  workflow_dispatch:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
    - name: دریافت کد پروژه
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: راه‌اندازی Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: دریافت اطلاعات آخرین نسخه Subconverter
      id: get_subconverter_release
      shell: pwsh
      run: |
        Write-Host 'دریافت اطلاعات آخرین نسخه Subconverter...'
        $response = Invoke-RestMethod -Uri 'https://api.github.com/repos/metacubex/subconverter/releases/latest' -Headers @{ Authorization = "token $env:GITHUB_TOKEN" }
        $latest = $response.tag_name
        $url = $response.assets | Where-Object { $_.name -like 'subconverter_win64*.7z' } | Select-Object -ExpandProperty browser_download_url
        Write-Host "نسخه آخر: $latest"
        Write-Host "آدرس دانلود: $url"
        "LATEST_SUB_TAG=$latest" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        "SUB_ASSET_URL=$url" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

    - name: بررسی نیاز به ساخت
      id: build_decision
      shell: pwsh
      run: |
        Write-Host 'بررسی نیاز به ساخت...'
        $latest = $env:LATEST_SUB_TAG
        $sha = $env:GITHUB_SHA
        $curRel = '' ; $curSha = '' ; $curVer = ''
        try {
          $repo = "$env:GITHUB_REPOSITORY"
          $r = Invoke-RestMethod -Uri "https://api.github.com/repos/$repo/releases/latest" -Headers @{ Authorization = "token $env:GITHUB_TOKEN" }
          $curRel = $r.tag_name
          if ($curRel -match 'subconverter-desktop-(v\d+\.\d+\.\d+)-[0-9a-fA-F]+') { $curVer = $Matches[1] }
          $t = Invoke-RestMethod -Uri "https://api.github.com/repos/$repo/git/ref/tags/$curRel" -Headers @{ Authorization = "token $env:GITHUB_TOKEN" }
          $curSha = $t.object.sha
          Write-Host "ریلیز قبلی: $curRel (#$curSha)"
        } catch { Write-Host 'ریلیز قبلی یافت نشد.' }
        $build = $false
        if (-not $curRel) { Write-Host 'اولین ساخت.'; $build = $true }
        elseif ($latest -ne $curVer) { Write-Host 'نسخه تغییر کرد.'; $build = $true }
        elseif ($sha -ne $curSha) { Write-Host 'کد تغییر کرد.'; $build = $true }
        else { Write-Host 'تغییری نیست.' }
        "FORCE_BUILD=$($build.ToString().ToLower())" | Out-File -FilePath $env:GITHUB_ENV -Append

    - name: دانلود و استخراج Subconverter
      if: env.FORCE_BUILD == 'true'
      shell: pwsh
      run: |
        Write-Host 'دانلود...' ; Invoke-WebRequest $env:SUB_ASSET_URL -OutFile sub.7z
        Write-Host 'استخراج...' ; & 'C:\Program Files\7-Zip\7z.exe' x sub.7z -o*
        $e = Get-ChildItem -Recurse -Filter 'subconverter.exe' | Select-Object -First 1
        if ($e) { Move-Item $e.FullName subconverter.exe; Write-Host 'منتقل شد.' } else { Write-Error 'یافت نشد.'; exit 1 }
        Remove-Item sub.7z ; Remove-Item -Recurse -Force (Get-ChildItem -Directory -Filter 'subconverter-windows-amd64-*')

    - name: نصب وابستگی‌ها
      if: env.FORCE_BUILD == 'true'
      run: npm install

    - name: ساخت Electron
      if: env.FORCE_BUILD == 'true'
      run: npm run build

    - name: نمایش dist
      if: env.FORCE_BUILD == 'true'
      shell: pwsh
      run: |
        Write-Host 'پوشه dist:'
        if (Test-Path './dist') { Get-ChildItem './dist' | ForEach-Object { Write-Host "- $($_.Name)" } } else { Write-Error 'ندیدم.'; exit 1 }

    - name: چک فایل زیپ
      if: env.FORCE_BUILD == 'true'
      shell: pwsh
      run: |
        $p="./dist/Subconverter Desktop-$env:LATEST_SUB_TAG-win.zip"
        if (Test-Path $p) { Write-Host "یافتم: $p" } else { Write-Error "ندیدم: $p"; exit 1 }

    - name: ایجاد ریلیز
      if: env.FORCE_BUILD == 'true'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: subconverter-desktop-${{ env.LATEST_SUB_TAG }}-${{ github.sha }}
        release_name: "Subconverter Desktop ${{ env.LATEST_SUB_TAG }}"
        body: ساخت خودکار
        draft: false
        prerelease: false

    - name: آپلود ZIP
      if: env.FORCE_BUILD == 'true'
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/Subconverter\ Desktop-${{ env.LATEST_SUB_TAG }}-win.zip
        asset_name: Subconverter-${{ env.LATEST_SUB_TAG }}.zip
        asset_content_type: application/zip
